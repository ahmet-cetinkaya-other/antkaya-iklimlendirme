---
import type { TranslationKey } from "~/domain/models/TranslationKey";
import { useI18nStatic } from "~/presentation/src/shared/hooks/useI18n";
import Faq from "~/domain/models/Faq";
import Icon from "~/presentation/src/shared/components/ui/icons/Icon.astro";

type Props = {
  title: TranslationKey;
  subtitle?: TranslationKey;
  faqs: Faq[];
};
const props = Astro.props;

const { translate } = useI18nStatic(Astro.url);
---

<!-- Main container that holds all content. Customized for different viewport sizes. -->
<div class="grid gap-10 md:grid-cols-5">
  <div class="md:col-span-2">
    <div class="max-w-xs">
      <h2 class="text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
        <Fragment set:html={translate(props.title)} />
      </h2>
      {
        props.subtitle && (
          <p class="mt-1 hidden text-neutral-600 dark:text-neutral-400 md:block">
            <Fragment set:html={translate(props.subtitle)} />
          </p>
        )
      }
    </div>
  </div>
  
  <!-- FAQ accordion items -->
  <div class="md:col-span-3">
    <ac-accordion-group>
      {
        props.faqs.map((faq) => (
          <ac-accordion>
            <button
              slot="trigger"
              class="flex w-full items-center justify-between gap-2 py-4 text-start text-lg font-medium text-neutral-800 hover:text-neutral-500 dark:text-neutral-200 dark:hover:text-neutral-400"
            >
              <span set:html={translate(faq.question)} />
              <Icon name="chevron-down" class="h-4 w-4 transition-transform duration-300" />
            </button>

            <div slot="content" class="pb-4 pt-2 text-neutral-600 dark:text-neutral-400">
              <p set:html={translate(faq.answer)} />
            </div>
          </ac-accordion>
        ))
      }
    </ac-accordion-group>
  </div>
</div>

<script>
  import "~/core/acore-ts/ui/components/Accordion";
  import "~/core/acore-ts/ui/components/AccordionGroup";
</script>
