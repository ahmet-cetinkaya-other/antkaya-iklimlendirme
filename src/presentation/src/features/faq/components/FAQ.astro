---
import type { TranslationKey } from "~/domain/models/TranslationKey";
import AccordionItem from "~/presentation/src/shared/components/ui/blocks/AccordionItem.astro";
import { useI18nStatic } from "~/presentation/src/shared/hooks/useI18n";
import Faq from "~/domain/models/Faq";

type Props = {
  title: TranslationKey;
  subtitle?: TranslationKey;
  faqs: Faq[];
};
const props = Astro.props;

const { translate } = useI18nStatic(Astro.url);

function makeId(base: any, index: any) {
  return `${base}${index + 1}`;
}
---

<!-- Main container that holds all content. Customized for different viewport sizes. -->
<div class="grid gap-10 md:grid-cols-5">
  <div class="md:col-span-2">
    <div class="max-w-xs">
      <h2 class="text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight">
        <Fragment set:html={translate(props.title)} />
      </h2>
      {
        props.subtitle && (
          <p class="mt-1 hidden text-neutral-600 dark:text-neutral-400 md:block">
            <Fragment set:html={translate(props.subtitle)} />
          </p>
        )
      }
    </div>
  </div>
  <!-- FAQ accordion items -->
  <div class="md:col-span-3">
    <div class="hs-accordion-group divide-y divide-neutral-200 dark:divide-neutral-700">
      {
        props.faqs.map((faq, i) => {
          // Generate ids dynamically for each FAQ accordion item.
          let id = makeId("hs-basic-with-title-and-arrow-stretched-heading-", i);
          let collapseId = makeId("hs-basic-with-title-and-arrow-stretched-collapse", i);

          return (
            <AccordionItem
              id={id}
              collapseId={collapseId}
              first={i === 0}
              question={translate(faq.question)}
              answer={translate(faq.answer)}
            />
          );
        })
      }
    </div>
  </div>
</div>
