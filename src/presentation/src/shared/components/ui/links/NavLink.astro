---
import { mergeCls } from "~/core/acore-ts/ui/ClassHelpers";

interface Props {
  url: string;
  name: string;
  class?: string;
}

const props = Astro.props;
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home' 
-->
<a
  id={props.url === "/" ? "home" : props.url.replace("/", "")}
  href={props.url}
  data-astro-prefetch
  class={mergeCls(
    "rounded-lg text-base font-medium text-neutral-600 outline-none ring-zinc-500 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-500 dark:focus:outline-none md:py-3 md:text-sm 2xl:text-base",
    props.class,
  )}
>
  {props.name}
</a>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let url = window.location.pathname;
    let urlSegments = url.split("/");
    let navId;

    if (url === "/") {
      navId = "home";
    } else {
      navId = url.replace("/", "");
    }

    let nav = document.getElementById(navId);

    if (nav) {
      nav.classList.remove(
        "text-primary",
        "dark:text-secondary",
        "hover:text-primary/70",
        "dark:hover:text-secondary/70",
        "ac-animate-glow",
      );
      nav.classList.add("text-primary", "dark:text-secondary", "ac-animate-glow");
      nav.setAttribute("aria-current", "page");
    }
  });
</script>

<style>
  .ac-animate-glow {
    filter: drop-shadow(0 0 2px currentColor);
    animation: glow 2s ease-in-out infinite alternate;
  }

  @keyframes glow {
    from {
      filter: drop-shadow(0 0 2px currentColor);
      opacity: 0.7;
    }
    to {
      filter: drop-shadow(0 0 8px currentColor);
      opacity: 1;
    }
  }
</style>
