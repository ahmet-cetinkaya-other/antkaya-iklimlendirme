---
import { getImage } from "astro:assets";
import type { ImageMetadata } from "astro";
import { OG, PAGES, SEO, SITE } from "~/presentation/src/shared/constants/constants";
import faviconSvgSrc from "/public/favicon.svg";
import faviconSrc from "/public/favicon.png";
// import { ClientRouter } from "astro:transitions";

export type Props = {
  title?: string;
  description?: string;
  ogTitle?: string;
  ogDescription?: string;
  ogType?: string;
  ogImage?: ImageMetadata;
  ogLocale?: string;
  structuredData?: Record<string, unknown>;
  canonicalURL?: string | URL;
};

const defaultProps = {
  title: SITE.title,
  description: SITE.description,
  ogTitle: OG.title,
  ogDescription: OG.description,
  ogType: OG.type,
  ogImage: OG.image,
  ogLocale: OG.locale,
  structuredData: SEO.structuredData,
  canonicalURL: Astro.url.href,
};

const {
  title = defaultProps.title,
  description = defaultProps.description,
  ogTitle = defaultProps.ogTitle,
  ogDescription = defaultProps.ogDescription,
  ogType = defaultProps.ogType,
  ogImage = defaultProps.ogImage,
  ogLocale = defaultProps.ogLocale,
  structuredData = defaultProps.structuredData,
  canonicalURL = defaultProps.canonicalURL,
} = Astro.props;

const author = SITE.author;
const canonical = new URL(canonicalURL, Astro.site).href;
const socialImageRes = await getImage({
  src: ogImage, // ogImage is already ImageMetadata
  width: 1200,
  height: 600,
});
const socialImage = new URL(socialImageRes.src, Astro.url.origin).href;

const fullPath: string = Astro.url.pathname;

// Find matching page from PAGES
const currentPage = Object.values(PAGES).find((page) =>
  Object.values(page.paths).some((path) => fullPath.startsWith(path)),
);

const alternateLanguageLinks: string = currentPage
  ? Object.entries(currentPage.paths)
      .map(([lang, path]) => {
        const href = `${Astro.site!.toString().slice(0, -1)}${path}`;
        return `<link rel="alternate" hreflang="${lang}" href="${href}" />`;
      })
      .join("\n")
  : "";

// Generate and optimize the favicon images
const faviconSvg = await getImage({
  src: faviconSvgSrc,
  format: "svg",
});

const appleTouchIcon = await getImage({
  src: faviconSrc,
  width: 180,
  height: 180,
  format: "png",
});
---

<!-- Inject structured data into the page if provided. This data is formatted as JSON-LD, a method recommended by Google for structured data pass:
     https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data -->{
  structuredData && <script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)} />
}
<!-- Define the character set, description, author, and viewport settings -->
<title>{title}</title>
<meta charset="utf-8" />
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="web_author" content={author} />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0" />
<meta http-equiv="X-UA-Compatible" content="ie=edge" />
<link rel="canonical" href={canonical} />
<Fragment set:html={alternateLanguageLinks} />

<!-- Facebook Meta Tags -->
<meta property="og:locale" content={ogLocale} />
<meta property="og:url" content={Astro.site!.toString()} />
<meta property="og:type" content={ogType} />
<meta property="og:title" content={ogTitle} />
<meta property="og:site_name" content={SITE.title} />
<meta property="og:description" content={ogDescription} />
<meta property="og:image" content={socialImage} />
<meta content="1200" property="og:image:width" />
<meta content="600" property="og:image:height" />
<meta content="image/png" property="og:image:type" />

<!-- Twitter Meta Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:domain" content={Astro.site!.toString()} />
<meta property="twitter:url" content={Astro.site!.toString()} />
<meta name="twitter:title" content={ogTitle} />
<meta name="twitter:description" content={ogDescription} />
<meta name="twitter:image" content={socialImage} />

<!-- Links to the webmanifest and sitemap -->
<link rel="manifest" href="/manifest.json" />
<!-- https://docs.astro.build/en/guides/integrations-guide/sitemap/ -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Links for favicons -->
<link href="/favicon.ico" rel="icon" sizes="any" type="image/x-icon" />
<link href={faviconSvg.src} rel="icon" type="image/svg+xml" sizes="any" />
<meta name="mobile-web-app-capable" content="yes" />
<link href={appleTouchIcon.src} rel="apple-touch-icon" />
<link href={appleTouchIcon.src} rel="shortcut icon" />
<!-- Set theme color -->
<meta name="theme-color" content="#facc15" />

<!-- View transitions -->
<!-- <ClientRouter /> -->
